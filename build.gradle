plugins {
    id("net.minecraftforge.gradle") version("${fg_plugin_version}")
    id("org.spongepowered.mixin") version("${mixin_plugin_version}")
    id("eclipse")
    id("idea")
    id("maven-publish")
    id("org.parchmentmc.librarian.forgegradle") version("${librarian_plugin_version}")
}

version = "${mod_version}-1.20.1"
group = "${mod_group_id}"
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mappings_channel, version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${mod_id}.mixins.json"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }

        client {
            args '--username', "nikgub"
            property 'forge.enabledGameTestNamespaces',  mod_id
        }
        server {
            property 'forge.enabledGameTestNamespaces',  mod_id
        }
        gameTestServer {
            property 'forge.enabledGameTestNamespaces',  mod_id
        }

        data {
            args '--mod',  mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    ext.refMap = "main.refmap.json"
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
    debug.export = true
}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url = 'https://maven.kosmx.dev/'
    }
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-common-api:15.2.0.27"))
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.2.0.27"))
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.2.0.27"))

    compileOnly fg.deobf("curse.maven:bettercombat-forge-639842:4823303")
    runtimeOnly fg.deobf("curse.maven:bettercombat-forge-639842:4823303")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.4.2+1.20.1")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.4.2+1.20.1:api")

    compileOnly fg.deobf("curse.maven:cloth-config-forge-348521:4633444")
    runtimeOnly fg.deobf("curse.maven:cloth-config-forge-348521:4633444")

    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.4.2')

    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:1.0.2-rc1+1.20")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
            mappings_channel: mappings_channel, mappings_version: mappings_version,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('jar', Jar).configure {
    archiveClassifier = 'slim'
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : mod_version,
                'Implementation-Title'    : mod_name,
                'Implementation-Version'  : mod_version,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs'		  	  : "${mod_id}.mixins.json"
        ])
    }
    finalizedBy("reobfJar")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}